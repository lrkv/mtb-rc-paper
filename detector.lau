\documentclass{article}
\usepackage{xltxtra, polyglossia, url, hyperref}
\usepackage[backend=biber]{biblatex}
\addbibresource{bibliography.bib}
% \usepackge{ecos}
\setdefaultlanguage{english}
% \setmainfont{Cambria}

\begin{document}
% \paper{Smart Occupancy Detector on Railroad Model Track}
\author{Jan Horáček}{MENDELU}
\author{Jiří Rybička}{MENDELU}
\abstract

For a control of a model railway, simple track occupancy detectors are in use
to detect presence and absence of a vehicle on the track. However, these detectors
do not use a full potential of a digital command control (DCC) system.
A RailCom technology allows information to be obtained from the vehicle's DCC decoder,
so the detector can receive operationally important data from the rolling stock vehicle.
Subject of the paper is the description of requirements and design of an
own RailCom detector MTB-RC, which presents an alternative to the commercially-available
products. MTB-RC is an open-source and open-hardware project, which is also
compatible with the rest of a trackside hardware used in the Track Vehicle
Control Laboratory FBE MENDELU. MTB-RC can read addresses of the DCC decoders
present on the track and transmit it to the railway control software via MTBbus.

\endabstract

% \keyw{railroad, model, interlocking, RailCom, occupancy detector, Digital
% Command Control, DCC, economic sustainability}

% \JEL{L920}

\section{Introduction}

The model railway in the Track Vehicle Control Laboratory is a complex
computer-controlled electronic system. One of the key components required for
the safe operation of a (model) railway is a track occupancy detector. This
hardware detects presence of a vehicle -- an engine or a car -- in a section.
The railway is then divided into multiple sections, each section is connected
to one detector. A small model station with 3 tracks can contain circa 10
sections.

% One of the main purposes of the track in the lab is to model traffic just like
% a real railroad and allow students to create simple programs to control it. At
% the same time, in addition to technical solutions, it is necessary to always
% follow economic aspects. Financial resources always have their limits and it
% is absolutely necessary to save with them, which is a necessary condition for
% the sustainability of the operation of the laboratory.

In the model, the track occupancy detector basically detects whether the current flows
through the rails - from one rail to another. In Digital Command Control (DCC) \cite{dcc-wg}
system, each engine contains a small microcomputer which always draws current
and each axle of a car contains an embedded resistor (15 kOhm) to draw the current as well.
Thus any present vehicle in the model track draws current and this current in detected
by track occupancy detector as a voltage drop on a diode (other methods to detect current
exist too).

% Similar to the control of a real railway, it is also necessary to detect the
% presence of vehicles in a certain section of the track in model form. For this
% purpose, there are several different approaches and solutions, including
% commonly available factory products adapted to mostly simple tracks in
% domestic conditions serving mainly as children's toys. Large-scale railway
% yards, however, have to use somewhat different technologies, which differ
% mainly in terms of technical characteristics, but also in the price and
% availability of components.

In some situations, however, a different approach to the occupancy detection
is beneficial. An extension of a DCC protocol called RailCom \cite{railcom-dccwiki}
allows the information to be read from vehicle's decoder by the detector.
The decoder must support RailCom protocol, but most of the decoders nowadays
have a RailCom support implemented and even enabled by default \cite{???}.
Also, the RailCom detector only reads information from the decoder, so cars
are not detected by the detector. Thus, the RailCom detector cannot simply
replace current-based detector mentioned in the previous article. The RailCom
detector must be perceived as an extension to the current-based detector.
A technology with different usages, different implementation, different price.

\section{DCC}

The Digital Command Control (DCC) protocol was created in 1992 by
National Model Railroad Association (NMRA) \cite{dcc-history}. The association
in cooperation with companies producing model railroad hardware created a DCC
Working group, which then released standards describing DCC from electrical and
protocol point of view.

The DCC protocol was designed as a one-way protocol. The data flows from the
\textit{Command Station} to the vehicles via tracks. The command station is
controlled by throttles or computers, its main purpose is to generate the DCC
signal. The signal goes via rails into the decoders of railway vehicles. The
decoder is usually a small electronic module (e.g. 1×3 cm) with a powerful
microcontroller which decoder DCC and controls the vehicle. Each decoder has its
address, so different engines can be distinguished. The decoder controls mainly
(1) motor, (2) lights, (3) sounds. Address of a decoder could be either
\textit{basic} (1–127) or \textit{extended} (1–9999) \cite{dcc-addr}. On large
layout, extended addresses are usually used, so we will focus mainly on this
format, however compatibility with vehicles with basic address should be kept.

TODO: mention boosters

\begin{figure}[h]
	\centering
	\includegraphics[width=0.8\textwidth]{data/dcc-packet.pdf}
	\caption{An example of a DCC packet \cite{nmra-s9.2}.}
	\label{dcc-packet}
\end{figure}

DCC transmits data in packets using voltage between rails \cite{nmra-s9.2}. At
each instant of a time, one rail compared to another has either positive or
negative voltage. Length of pulses distinguishes logical 0 (100 us pulse) and 1
(58 us pulse). Each packet can contain different number of bytes. See figure
\ref{dcc-packet}.

The command station transmits packets one by another, cyclically addressing
all decoders in wants to send commands to. It is important to send the data
(e.g. speed command) cyclically, because the command station does not know
whether the decoder received the command successfully. The decoder could
be temporary busy, the engine could temporary loose electrical contact to rails etc.

Detailed specification of a DCC protocol is available in \cite{nmra-s9.2}.

\section{RailCom}

In 2006, a NMRA standard \cite{nmra-railcom} describing an extension of a DCC
protocol was released. The standard describes so-called RailCom protocol, which
allows the mobile decoders to transmit data back to the command station while
normally operational.

The principle is as follows: in the space between DCC packets, the decoder
transmits data. The decoder must contain a capacitor which gives it enough power
to transmit data. An overview of components participating on a RailCom transmission
is shown in figure \ref{decoder-transmission}.

\begin{figure}[h]
	% \includegraphics[width=0.8\textwidth]{data/railcom-components.pdf}
	\caption{Components present in RailCom transmission.}
	\label{decoder-transmission}
\end{figure}

The transmission in current-based. To transmit a “0”, the decoder must supply a
current of 30+4/-6 mA with a voltage drop at the track of up to 2.2V. To
transmit a “1”, the current must be at the most +/- 0.1mA \cite{nmra-railcom}.
Compared to the voltage-based the design, the electrical design of a RailCom
transmission is much more resistant to interference. However a special switch
in the command station or a DCC booster is required. The switch just connects
rails together, so the current loop is closed. There are command stations
and boosters with and without RailCom support. This, railcom-supported booster or
command station is required.

The last part in \ref{decoder-transmission} is a \textit{detector}. The detector
is a device, which reads data from decoder and is the topic of this paper. The
detector senses current from the decoder and reads the data. Note there may be
multiple detectors in the current loop, which is beneficial in some situations.

From the data point of view, the RailCom transmission is a 250 kbis/s UART
communication \cite{nmra-railcom}. This is large gap from DCC communication,
which has an average speed of 6 kbit/s.

The decoder transmits data in 2 channels. Channel 1 usually contains an address
of a decoder transmitting the data, channel 2 contains response to a specific
DCC commands requesting the decoder to respond (e.g. read configuration from the
decoder or acknowledgement of a speed command).

\section{Requirements}

Based on the possibilities of a RailCom protocol, we infer usecases in which
the protocol is beneficial and requirements for a solution.

We will focus on the address-reading capability of RailCom. There are other
important usages, e.g. the command station does not have to resend the data
to the decoder cyclically, if the decoder confirmed (via RailCom) that it received
the DCC packet correctly. However, the aim of this paper is to focus on
a decoder-address-reading capability.

Reading of a decoder's address is beneficial in situations, when the address
is unknown. Usually, when train is in movement on a computer-controlled railroad
like the one in Track Vehicle Control Laboratory, the software already knows
its address, because it must have commanded it to move. We identifies following
places, where RailCom technology is advantageous.

\begin{enumerate}
	\item Shunting in a train depot. \\
	In the depot, engines are usually changed between rails fast and often.
	They are even sometimes packed or unpacked by the owner. Moving the
	responsibility to track vehicle's addresses from the operator to a
	device seems to be beneficial.
	\item Track for new engines. \\
	There is usually a track or tracks at the model railroad specifically
	designed for putting new vehicles on the track. The detector may automate
	creating of a new train by automatically detecting engine's DCC address.
	\item Handover track. \\
	When part of the track is manager by other railroad control system, the
	detector may be used on the entering track from foreign system to detect
	incoming vehicle's DCC address.
\end{enumerate}

Based on the usecases, the detector should support several track circuits. The
detector should be able to read decoder's address. If more vehicles are present
(e.g. multitraction, multiple engines on a track in depot etc.) the detector
should be able to read all of them. The detector should transmit detected
addresses to the train control system. The detector should be financially
available and ideally customizable and fixable/replaceable for long-time
sustainability.

\section{State of the art}

There are several industrial solutions for obtaining the address of a vehicle on
the track.

\subsection{LRC120 by Lenz Elektronik}

Lenz Elektronik manufactures the \textit{LRC120} RailCom Display module. The
module is able to display the address of the decoder in the connected track
section on the four-digit display. The module is available from many vendors,
for example AMB models \cite{lrc120}.

Main disadvantage of the module is absence of an interface for reporting the
address further.

\subsection{10808 detector by Roco}

One of the largest companies producing vehicles and equipment for model
railways offers the \textit{Z21 10808 detector}. The detector can be connected
to Roco Z21 command station using R-Bus or CAN. It supports 8 sections and allows
various settings. To use RailCom, CAN bus must be used together with Roco Z21
command station \cite{z21det}.

From our points of view, disadvantage of this solution is a vendor-lock requiring
use of the Roco command station. This would also require further cabling.

\subsection{YD6016LN-RC by YaMoRC (Digikeijs)}

The company Digikeijs, which offered a widespread and popular DCC hardware
recently announced the end of its activities. The successor company is called
YaMoRC, the products are similar.

YaMoRC offers YD6016LN-RC RailCom track occupancy detector (similar to former
Digikeijs DR5088RC) with 16 track sections. The detector supports per-track
channel-1 address reporting and one global detector for reading other data
from vehicles. All information from the DR5088RC is transported via the
\textit{LocoNet} bus, with firmware updates possible over a USB connection.
The module is configurable over USB. \cite{yd6016ln-rc}.

However, the module is not available now and its deployment would require
further cabling to connect it to the command station.

\subsection{RailComDisplay by F. M. Cañada}

A well-known enthusiast for the DCC automation F. M. Cañada designed a RailCom
module with display, which shows address of a DCC decoder similar to LRC120
\cite{paco-railcom}.

This module is local-only (without any bus), however the big advantage of the
RailComDisplay is availability of schematics. The module is a source of useful
inspiration.

\subsection{Conclusion}

Several commercial RailCom feedback modules exist, each has its own advantages
and disadvantages. For our requirements, we decided to design an own RailCom
detector MTB-RC. The detector will be fully compatible with existing track
hardware (no need to add more cabling), it will be fully customizable as the
whole design is upon us. Moreover, we will provide an opensource and openhardware
alternative to the existing commercial products.

\section{MTB-RC}

MTB-RC should support following features.

\begin{enumerate}
	\item Support for 8 track circuits. \\
	This number is a good compromise between scalability and price.
	\item Connection to the MTBbus \cite{mtbbus}. \\
	MTBbus is currently used for stationary hardware control in Track Vehicle
	Control Laboratory.
	\item Opensource and openhardware design.
\end{enumerate}

\subsection{Multiple decoders detection problem}

\section{Conclusion}

\printbibliography

\end{document}
